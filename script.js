const inputBox = document.getElementById("input-box");
const listContainer = document.getElementById("list-container");
const todoApp = document.querySelector('.todo-app');
const messageContainer = document.getElementById("message-container");
const keyInfoContainer = document.getElementById("key-info-container");

// AlarmlarÄ± bir diziye koyun
const alerts = [
    "Hedef belirlemek, gÃ¶rÃ¼nmeyeni gÃ¶rÃ¼nÃ¼r hale getirmenin ilk adÄ±mÄ±dÄ±r. ðŸ™‚",
    "UlaÅŸamayacaÄŸÄ±n hedefler koymalÄ±sÄ±n ki her zaman uÄŸruna yaÅŸayacak bir ÅŸeyin olsun. ðŸ™‚",
    "Hayattaki en bÃ¼yÃ¼k tehlikelerden birisi, insanÄ±n hedeflerini Ã§ok zor koyup baÅŸaramamasÄ± deÄŸil, Ã§ok basit koyup baÅŸarmasÄ±dÄ±r. ðŸ™‚",
    "Kendinize o kadar bÃ¼yÃ¼k bir hedef belirleyin ki, ona ulaÅŸmaya Ã§alÄ±ÅŸÄ±rken insanlarÄ±n yerinde olmayÄ± isteyecekleri kiÅŸi haline gelin. ðŸ™‚",
    "BaÅŸarÄ±, cesaret ve kararlÄ±lÄ±kla inÅŸa edilir. ðŸ™‚",
    "AmacÄ± olmayan gemiye hiÃ§bir rÃ¼zgar yardÄ±m etmez. ðŸ™‚",
    "HayatÄ±n asÄ±l amacÄ±, bilgi deÄŸil eylemdir. ðŸ™‚",
    "Hedef koyarsanÄ±z her ÅŸeyi yapabilirsiniz. Sadece kendini zorlaman gerekiyor. ðŸ™‚",
    "Bir hedef belirlediÄŸinizde beyniniz bir gÃ¶rev listesi aÃ§ar. ðŸ™‚",
    "GÃ¼Ã§lÃ¼ bir irade, her ÅŸeyin Ã¶nÃ¼ndedir. ðŸ™‚"
];

// GÃ¶rev ekleme fonksiyonu
function addTask() {
    if (inputBox.value === '') {
        // Rastgele bir alarmla kullanÄ±cÄ±yÄ± bilgilendirin
        const randomIndex = Math.floor(Math.random() * alerts.length);
        alert(alerts[randomIndex]);
    } else {
        let li = document.createElement("li");
        li.textContent = inputBox.value;
        listContainer.appendChild(li);

        let span = document.createElement("span");
        span.textContent = "\u00d7";
        li.appendChild(span);

        // GÃ¶rev gÃ¶rÃ¼nÃ¼r hale getirme
        li.classList.add('show');
        
        showMessage("GÃ¶rev eklendi!", 2000); // GÃ¶rev ekleme mesajÄ±
    }
    inputBox.value = '';
    saveData();
}

// TÃ¼m gÃ¶revleri temizleme fonksiyonu
function clearAll() {
    const items = listContainer.querySelectorAll('li');
    items.forEach(item => {
        item.classList.add('fade-out');
    });

    todoApp.classList.add('scale-down'); // Veya baÅŸka bir animasyon sÄ±nÄ±fÄ±
    
    setTimeout(() => {
        listContainer.innerHTML = '';
        saveData();
        todoApp.classList.remove('scale-down');
    }, 300); // Fade-out animasyon sÃ¼resi
}

// Listeye tÄ±klama olaylarÄ±
listContainer.addEventListener("click", function(e) {
    if (e.target.tagName === "LI") {
        e.target.classList.toggle("checked");
        saveData();
    } else if (e.target.tagName === "SPAN") {
        e.target.parentElement.classList.add('fade-out');
        setTimeout(() => {
            e.target.parentElement.remove();
            saveData();
            showMessage("GÃ¶rev temizlendi!", 2000); // TÃ¼mÃ¼nÃ¼ temizle mesajÄ±
        }, 300); // Fade-out animasyon sÃ¼resi
    }
}, false);

// Enter tuÅŸuna basma olaylarÄ±
inputBox.addEventListener("keydown", function(e) {
    if (e.key === "Enter") {
        e.preventDefault(); // Enter tuÅŸunun formu gÃ¶ndermesini engelle
        addTask();
        showMessage("GÃ¶rev eklendi! (Enter)", 2000); // Enter tuÅŸu mesajÄ±
    }
});

// f2 tuÅŸuna basma olaylarÄ±
document.addEventListener("keydown", function(e) {
    if (e.key === "F2" || e.key === "F2") {
        e.preventDefault(); //f2 tuÅŸunun varsayÄ±lan iÅŸlevlerini engelle
        clearAll();
        showMessage("Liste temizlendi! (F2)", 2000); // f2 tuÅŸu mesajÄ±
    }
});

function showMessage(message, duration) {
    messageContainer.textContent = message;
    messageContainer.classList.add('show');
    setTimeout(() => {
        messageContainer.classList.remove('show');
    }, duration);
}

// TuÅŸ aÃ§Ä±klamalarÄ±nÄ± dÃ¶ngÃ¼de gÃ¶sterme
const keyMessages = [
    "Enter tuÅŸuna basarak gÃ¶rev ekleyebilirsiniz.",
    "F2 tuÅŸuna basarak tÃ¼m listeyi temizleyebilirsiniz."
];
let keyMessageIndex = 0;

function showKeyInfo() {
    keyInfoContainer.textContent = keyMessages[keyMessageIndex];
    keyInfoContainer.classList.add('show');
    keyMessageIndex = (keyMessageIndex + 1) % keyMessages.length;
}

// MesajÄ± sÃ¼rekli dÃ¶ngÃ¼de gÃ¶stermek iÃ§in interval kullanma
setInterval(showKeyInfo, 3000); // Her 3 saniyede bir mesaj deÄŸiÅŸir

function saveData() {
    localStorage.setItem("data", listContainer.innerHTML);
}

function showTask() {
    listContainer.innerHTML = localStorage.getItem("data");
    // Mevcut gÃ¶revler iÃ§in fade-in animasyonu
    document.querySelectorAll('#list-container li').forEach(li => {
        li.classList.add('show');
    });
}

showTask();
